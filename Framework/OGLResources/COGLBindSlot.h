#ifndef _C_GL_BIND_SLOT_H_
#define _C_GL_BIND_SLOT_H_

#include "GL/glew.h"

#include <iostream>

enum COGLBindSlot 
{ 
	COGL_TEXTURE0_SLOT, COGL_TEXTURE1_SLOT, COGL_TEXTURE2_SLOT, COGL_TEXTURE3_SLOT,
	COGL_TEXTURE4_SLOT, COGL_TEXTURE5_SLOT, COGL_TEXTURE6_SLOT, COGL_TEXTURE7_SLOT, 
	COGL_TEXTURE8_SLOT, COGL_TEXTURE9_SLOT, COGL_TEXTURE10_SLOT, 
	COGL_FRAMEBUFFER_SLOT, COGL_RENDERBUFFER_SLOT,
	COGL_VERTEX_ARRAY_SLOT, COGL_UNIFORM_BUFFER_SLOT, COGL_PROGRAM_SLOT, COGL_ARRAY_BUFFER_SLOT,
	COGL_ELEMENT_ARRAY_BUFFER_SLOT
};

static GLenum GetGLSlot(COGLBindSlot slot) 
{
	switch(slot)
	{
	case COGL_TEXTURE0_SLOT: return GL_TEXTURE0;
	case COGL_TEXTURE1_SLOT: return GL_TEXTURE1;
	case COGL_TEXTURE2_SLOT: return GL_TEXTURE2;
	case COGL_TEXTURE3_SLOT: return GL_TEXTURE3;
	case COGL_TEXTURE4_SLOT: return GL_TEXTURE4;
	case COGL_TEXTURE5_SLOT: return GL_TEXTURE5;
	case COGL_TEXTURE6_SLOT: return GL_TEXTURE6;
	case COGL_TEXTURE7_SLOT: return GL_TEXTURE7;
	case COGL_TEXTURE8_SLOT: return GL_TEXTURE8;
	case COGL_TEXTURE9_SLOT: return GL_TEXTURE9;
	case COGL_TEXTURE10_SLOT: return GL_TEXTURE10;

	case COGL_FRAMEBUFFER_SLOT: return GL_FRAMEBUFFER;
	case COGL_RENDERBUFFER_SLOT: return GL_RENDERBUFFER;
	case COGL_VERTEX_ARRAY_SLOT: return GL_VERTEX_ARRAY;
	case COGL_UNIFORM_BUFFER_SLOT: return GL_UNIFORM_BUFFER;
	case COGL_ARRAY_BUFFER_SLOT: return GL_ARRAY_BUFFER;
	case COGL_ELEMENT_ARRAY_BUFFER_SLOT: return GL_ELEMENT_ARRAY_BUFFER;

	default: std::cout << "Invalid bind slot" << std::endl; return 0;
	}
}

#endif _C_GL_BIND_SLOT_H_